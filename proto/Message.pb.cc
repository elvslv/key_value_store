// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gen {
class PingReqFieldsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PingReqFields> {
} _PingReqFields_default_instance_;
class AckFieldsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AckFields> {
} _AckFields_default_instance_;
class GossipDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Gossip> {
} _Gossip_default_instance_;
class GossipFieldsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GossipFields> {
} _GossipFields_default_instance_;
class MessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message> {
  public:
  const ::gen::PingReqFields* pingreqfields_;
  const ::gen::AckFields* ackfields_;
  const ::gen::GossipFields* gossipfields_;
} _Message_default_instance_;

namespace protobuf_Message_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReqFields, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PingReqFields, targetaddress_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckFields, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AckFields, originalid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gossip, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gossip, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gossip, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Gossip, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GossipFields, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GossipFields, messagecommon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GossipFields, gossips_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, messagetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, sourceaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, destinationaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, id_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), pingreqfields_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), ackfields_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_Message_default_instance_), gossipfields_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, customFields_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(PingReqFields)},
  { 6, -1, sizeof(AckFields)},
  { 12, -1, sizeof(Gossip)},
  { 20, -1, sizeof(GossipFields)},
  { 27, -1, sizeof(Message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_PingReqFields_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AckFields_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Gossip_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GossipFields_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _PingReqFields_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _AckFields_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Gossip_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _GossipFields_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Message_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::gen::protobuf_Address_2eproto::InitDefaults();
  _PingReqFields_default_instance_.DefaultConstruct();
  _AckFields_default_instance_.DefaultConstruct();
  _Gossip_default_instance_.DefaultConstruct();
  _GossipFields_default_instance_.DefaultConstruct();
  _Message_default_instance_.DefaultConstruct();
  _PingReqFields_default_instance_.get_mutable()->targetaddress_ = const_cast< ::gen::Address*>(
      ::gen::Address::internal_default_instance());
  _Gossip_default_instance_.get_mutable()->address_ = const_cast< ::gen::Address*>(
      ::gen::Address::internal_default_instance());
  _GossipFields_default_instance_.get_mutable()->messagecommon_ = const_cast< ::gen::Message*>(
      ::gen::Message::internal_default_instance());
  _Message_default_instance_.get_mutable()->sourceaddress_ = const_cast< ::gen::Address*>(
      ::gen::Address::internal_default_instance());
  _Message_default_instance_.get_mutable()->destinationaddress_ = const_cast< ::gen::Address*>(
      ::gen::Address::internal_default_instance());
  _Message_default_instance_.pingreqfields_ = const_cast< ::gen::PingReqFields*>(
      ::gen::PingReqFields::internal_default_instance());
  _Message_default_instance_.ackfields_ = const_cast< ::gen::AckFields*>(
      ::gen::AckFields::internal_default_instance());
  _Message_default_instance_.gossipfields_ = const_cast< ::gen::GossipFields*>(
      ::gen::GossipFields::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rMessage.proto\022\003gen\032\rAddress.proto\"4\n\rP"
      "ingReqFields\022#\n\rtargetAddress\030\002 \001(\0132\014.ge"
      "n.Address\"\037\n\tAckFields\022\022\n\noriginalId\030\002 \001"
      "(\t\"Y\n\006Gossip\022$\n\005event\030\001 \001(\0162\025.gen.Gossip"
      "EventTypes\022\035\n\007address\030\002 \001(\0132\014.gen.Addres"
      "s\022\n\n\002id\030\003 \001(\t\"Q\n\014GossipFields\022#\n\rmessage"
      "Common\030\001 \001(\0132\014.gen.Message\022\034\n\007gossips\030\002 "
      "\003(\0132\013.gen.Gossip\"\230\002\n\007Message\022%\n\013messageT"
      "ype\030\001 \001(\0162\020.gen.MessageType\022#\n\rsourceAdd"
      "ress\030\002 \001(\0132\014.gen.Address\022(\n\022destinationA"
      "ddress\030\003 \001(\0132\014.gen.Address\022\n\n\002id\030\004 \001(\t\022+"
      "\n\rpingReqFields\030\005 \001(\0132\022.gen.PingReqField"
      "sH\000\022#\n\tackFields\030\006 \001(\0132\016.gen.AckFieldsH\000"
      "\022)\n\014gossipFields\030\007 \001(\0132\021.gen.GossipField"
      "sH\000B\016\n\014customFields*T\n\013MessageType\022\010\n\004PI"
      "NG\020\000\022\007\n\003ACK\020\001\022\014\n\010PING_REQ\020\002\022\013\n\007JOINREQ\020\003"
      "\022\013\n\007JOINREP\020\004\022\n\n\006GOSSIP\020\005**\n\020GossipEvent"
      "Types\022\n\n\006JOINED\020\000\022\n\n\006FAILED\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 717);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
  ::gen::protobuf_Address_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Message_2eproto

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_enum_descriptors[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GossipEventTypes_descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_enum_descriptors[1];
}
bool GossipEventTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PingReqFields::kTargetAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PingReqFields::PingReqFields()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gen.PingReqFields)
}
PingReqFields::PingReqFields(const PingReqFields& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_targetaddress()) {
    targetaddress_ = new ::gen::Address(*from.targetaddress_);
  } else {
    targetaddress_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gen.PingReqFields)
}

void PingReqFields::SharedCtor() {
  targetaddress_ = NULL;
  _cached_size_ = 0;
}

PingReqFields::~PingReqFields() {
  // @@protoc_insertion_point(destructor:gen.PingReqFields)
  SharedDtor();
}

void PingReqFields::SharedDtor() {
  if (this != internal_default_instance()) {
    delete targetaddress_;
  }
}

void PingReqFields::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PingReqFields::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PingReqFields& PingReqFields::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

PingReqFields* PingReqFields::New(::google::protobuf::Arena* arena) const {
  PingReqFields* n = new PingReqFields;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PingReqFields::Clear() {
// @@protoc_insertion_point(message_clear_start:gen.PingReqFields)
  if (GetArenaNoVirtual() == NULL && targetaddress_ != NULL) {
    delete targetaddress_;
  }
  targetaddress_ = NULL;
}

bool PingReqFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gen.PingReqFields)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gen.Address targetAddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_targetaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gen.PingReqFields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gen.PingReqFields)
  return false;
#undef DO_
}

void PingReqFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gen.PingReqFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.Address targetAddress = 2;
  if (this->has_targetaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->targetaddress_, output);
  }

  // @@protoc_insertion_point(serialize_end:gen.PingReqFields)
}

::google::protobuf::uint8* PingReqFields::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gen.PingReqFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.Address targetAddress = 2;
  if (this->has_targetaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->targetaddress_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gen.PingReqFields)
  return target;
}

size_t PingReqFields::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gen.PingReqFields)
  size_t total_size = 0;

  // .gen.Address targetAddress = 2;
  if (this->has_targetaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->targetaddress_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PingReqFields::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gen.PingReqFields)
  GOOGLE_DCHECK_NE(&from, this);
  const PingReqFields* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PingReqFields>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gen.PingReqFields)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gen.PingReqFields)
    MergeFrom(*source);
  }
}

void PingReqFields::MergeFrom(const PingReqFields& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gen.PingReqFields)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_targetaddress()) {
    mutable_targetaddress()->::gen::Address::MergeFrom(from.targetaddress());
  }
}

void PingReqFields::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gen.PingReqFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PingReqFields::CopyFrom(const PingReqFields& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gen.PingReqFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PingReqFields::IsInitialized() const {
  return true;
}

void PingReqFields::Swap(PingReqFields* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PingReqFields::InternalSwap(PingReqFields* other) {
  std::swap(targetaddress_, other->targetaddress_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PingReqFields::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PingReqFields

// .gen.Address targetAddress = 2;
bool PingReqFields::has_targetaddress() const {
  return this != internal_default_instance() && targetaddress_ != NULL;
}
void PingReqFields::clear_targetaddress() {
  if (GetArenaNoVirtual() == NULL && targetaddress_ != NULL) delete targetaddress_;
  targetaddress_ = NULL;
}
const ::gen::Address& PingReqFields::targetaddress() const {
  // @@protoc_insertion_point(field_get:gen.PingReqFields.targetAddress)
  return targetaddress_ != NULL ? *targetaddress_
                         : *::gen::Address::internal_default_instance();
}
::gen::Address* PingReqFields::mutable_targetaddress() {
  
  if (targetaddress_ == NULL) {
    targetaddress_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.PingReqFields.targetAddress)
  return targetaddress_;
}
::gen::Address* PingReqFields::release_targetaddress() {
  // @@protoc_insertion_point(field_release:gen.PingReqFields.targetAddress)
  
  ::gen::Address* temp = targetaddress_;
  targetaddress_ = NULL;
  return temp;
}
void PingReqFields::set_allocated_targetaddress(::gen::Address* targetaddress) {
  delete targetaddress_;
  targetaddress_ = targetaddress;
  if (targetaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.PingReqFields.targetAddress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AckFields::kOriginalIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AckFields::AckFields()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gen.AckFields)
}
AckFields::AckFields(const AckFields& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  originalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.originalid().size() > 0) {
    originalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.originalid_);
  }
  // @@protoc_insertion_point(copy_constructor:gen.AckFields)
}

void AckFields::SharedCtor() {
  originalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AckFields::~AckFields() {
  // @@protoc_insertion_point(destructor:gen.AckFields)
  SharedDtor();
}

void AckFields::SharedDtor() {
  originalid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AckFields::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AckFields::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AckFields& AckFields::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

AckFields* AckFields::New(::google::protobuf::Arena* arena) const {
  AckFields* n = new AckFields;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AckFields::Clear() {
// @@protoc_insertion_point(message_clear_start:gen.AckFields)
  originalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AckFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gen.AckFields)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string originalId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->originalid().data(), this->originalid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gen.AckFields.originalId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gen.AckFields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gen.AckFields)
  return false;
#undef DO_
}

void AckFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gen.AckFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string originalId = 2;
  if (this->originalid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->originalid().data(), this->originalid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gen.AckFields.originalId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->originalid(), output);
  }

  // @@protoc_insertion_point(serialize_end:gen.AckFields)
}

::google::protobuf::uint8* AckFields::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gen.AckFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string originalId = 2;
  if (this->originalid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->originalid().data(), this->originalid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gen.AckFields.originalId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->originalid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gen.AckFields)
  return target;
}

size_t AckFields::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gen.AckFields)
  size_t total_size = 0;

  // string originalId = 2;
  if (this->originalid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->originalid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AckFields::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gen.AckFields)
  GOOGLE_DCHECK_NE(&from, this);
  const AckFields* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AckFields>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gen.AckFields)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gen.AckFields)
    MergeFrom(*source);
  }
}

void AckFields::MergeFrom(const AckFields& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gen.AckFields)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.originalid().size() > 0) {

    originalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.originalid_);
  }
}

void AckFields::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gen.AckFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AckFields::CopyFrom(const AckFields& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gen.AckFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AckFields::IsInitialized() const {
  return true;
}

void AckFields::Swap(AckFields* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AckFields::InternalSwap(AckFields* other) {
  originalid_.Swap(&other->originalid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AckFields::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AckFields

// string originalId = 2;
void AckFields::clear_originalid() {
  originalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AckFields::originalid() const {
  // @@protoc_insertion_point(field_get:gen.AckFields.originalId)
  return originalid_.GetNoArena();
}
void AckFields::set_originalid(const ::std::string& value) {
  
  originalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gen.AckFields.originalId)
}
#if LANG_CXX11
void AckFields::set_originalid(::std::string&& value) {
  
  originalid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gen.AckFields.originalId)
}
#endif
void AckFields::set_originalid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  originalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gen.AckFields.originalId)
}
void AckFields::set_originalid(const char* value, size_t size) {
  
  originalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gen.AckFields.originalId)
}
::std::string* AckFields::mutable_originalid() {
  
  // @@protoc_insertion_point(field_mutable:gen.AckFields.originalId)
  return originalid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AckFields::release_originalid() {
  // @@protoc_insertion_point(field_release:gen.AckFields.originalId)
  
  return originalid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AckFields::set_allocated_originalid(::std::string* originalid) {
  if (originalid != NULL) {
    
  } else {
    
  }
  originalid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), originalid);
  // @@protoc_insertion_point(field_set_allocated:gen.AckFields.originalId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Gossip::kEventFieldNumber;
const int Gossip::kAddressFieldNumber;
const int Gossip::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Gossip::Gossip()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gen.Gossip)
}
Gossip::Gossip(const Gossip& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_address()) {
    address_ = new ::gen::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  event_ = from.event_;
  // @@protoc_insertion_point(copy_constructor:gen.Gossip)
}

void Gossip::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&address_, 0, reinterpret_cast<char*>(&event_) -
    reinterpret_cast<char*>(&address_) + sizeof(event_));
  _cached_size_ = 0;
}

Gossip::~Gossip() {
  // @@protoc_insertion_point(destructor:gen.Gossip)
  SharedDtor();
}

void Gossip::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void Gossip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Gossip::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Gossip& Gossip::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

Gossip* Gossip::New(::google::protobuf::Arena* arena) const {
  Gossip* n = new Gossip;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Gossip::Clear() {
// @@protoc_insertion_point(message_clear_start:gen.Gossip)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  event_ = 0;
}

bool Gossip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gen.Gossip)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gen.GossipEventTypes event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_event(static_cast< ::gen::GossipEventTypes >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gen.Address address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gen.Gossip.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gen.Gossip)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gen.Gossip)
  return false;
#undef DO_
}

void Gossip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gen.Gossip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.GossipEventTypes event = 1;
  if (this->event() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event(), output);
  }

  // .gen.Address address = 2;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->address_, output);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gen.Gossip.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->id(), output);
  }

  // @@protoc_insertion_point(serialize_end:gen.Gossip)
}

::google::protobuf::uint8* Gossip::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gen.Gossip)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.GossipEventTypes event = 1;
  if (this->event() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event(), target);
  }

  // .gen.Address address = 2;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->address_, deterministic, target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gen.Gossip.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gen.Gossip)
  return target;
}

size_t Gossip::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gen.Gossip)
  size_t total_size = 0;

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .gen.Address address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  // .gen.GossipEventTypes event = 1;
  if (this->event() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Gossip::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gen.Gossip)
  GOOGLE_DCHECK_NE(&from, this);
  const Gossip* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Gossip>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gen.Gossip)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gen.Gossip)
    MergeFrom(*source);
  }
}

void Gossip::MergeFrom(const Gossip& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gen.Gossip)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_address()) {
    mutable_address()->::gen::Address::MergeFrom(from.address());
  }
  if (from.event() != 0) {
    set_event(from.event());
  }
}

void Gossip::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gen.Gossip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Gossip::CopyFrom(const Gossip& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gen.Gossip)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Gossip::IsInitialized() const {
  return true;
}

void Gossip::Swap(Gossip* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Gossip::InternalSwap(Gossip* other) {
  id_.Swap(&other->id_);
  std::swap(address_, other->address_);
  std::swap(event_, other->event_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Gossip::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Gossip

// .gen.GossipEventTypes event = 1;
void Gossip::clear_event() {
  event_ = 0;
}
::gen::GossipEventTypes Gossip::event() const {
  // @@protoc_insertion_point(field_get:gen.Gossip.event)
  return static_cast< ::gen::GossipEventTypes >(event_);
}
void Gossip::set_event(::gen::GossipEventTypes value) {
  
  event_ = value;
  // @@protoc_insertion_point(field_set:gen.Gossip.event)
}

// .gen.Address address = 2;
bool Gossip::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void Gossip::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::gen::Address& Gossip::address() const {
  // @@protoc_insertion_point(field_get:gen.Gossip.address)
  return address_ != NULL ? *address_
                         : *::gen::Address::internal_default_instance();
}
::gen::Address* Gossip::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.Gossip.address)
  return address_;
}
::gen::Address* Gossip::release_address() {
  // @@protoc_insertion_point(field_release:gen.Gossip.address)
  
  ::gen::Address* temp = address_;
  address_ = NULL;
  return temp;
}
void Gossip::set_allocated_address(::gen::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Gossip.address)
}

// string id = 3;
void Gossip::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Gossip::id() const {
  // @@protoc_insertion_point(field_get:gen.Gossip.id)
  return id_.GetNoArena();
}
void Gossip::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gen.Gossip.id)
}
#if LANG_CXX11
void Gossip::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gen.Gossip.id)
}
#endif
void Gossip::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gen.Gossip.id)
}
void Gossip::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gen.Gossip.id)
}
::std::string* Gossip::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:gen.Gossip.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Gossip::release_id() {
  // @@protoc_insertion_point(field_release:gen.Gossip.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Gossip::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:gen.Gossip.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GossipFields::kMessageCommonFieldNumber;
const int GossipFields::kGossipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GossipFields::GossipFields()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gen.GossipFields)
}
GossipFields::GossipFields(const GossipFields& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gossips_(from.gossips_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_messagecommon()) {
    messagecommon_ = new ::gen::Message(*from.messagecommon_);
  } else {
    messagecommon_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gen.GossipFields)
}

void GossipFields::SharedCtor() {
  messagecommon_ = NULL;
  _cached_size_ = 0;
}

GossipFields::~GossipFields() {
  // @@protoc_insertion_point(destructor:gen.GossipFields)
  SharedDtor();
}

void GossipFields::SharedDtor() {
  if (this != internal_default_instance()) {
    delete messagecommon_;
  }
}

void GossipFields::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GossipFields::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GossipFields& GossipFields::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

GossipFields* GossipFields::New(::google::protobuf::Arena* arena) const {
  GossipFields* n = new GossipFields;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GossipFields::Clear() {
// @@protoc_insertion_point(message_clear_start:gen.GossipFields)
  gossips_.Clear();
  if (GetArenaNoVirtual() == NULL && messagecommon_ != NULL) {
    delete messagecommon_;
  }
  messagecommon_ = NULL;
}

bool GossipFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gen.GossipFields)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gen.Message messageCommon = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_messagecommon()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gen.Gossip gossips = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gossips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gen.GossipFields)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gen.GossipFields)
  return false;
#undef DO_
}

void GossipFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gen.GossipFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.Message messageCommon = 1;
  if (this->has_messagecommon()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->messagecommon_, output);
  }

  // repeated .gen.Gossip gossips = 2;
  for (unsigned int i = 0, n = this->gossips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->gossips(i), output);
  }

  // @@protoc_insertion_point(serialize_end:gen.GossipFields)
}

::google::protobuf::uint8* GossipFields::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gen.GossipFields)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.Message messageCommon = 1;
  if (this->has_messagecommon()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->messagecommon_, deterministic, target);
  }

  // repeated .gen.Gossip gossips = 2;
  for (unsigned int i = 0, n = this->gossips_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->gossips(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gen.GossipFields)
  return target;
}

size_t GossipFields::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gen.GossipFields)
  size_t total_size = 0;

  // repeated .gen.Gossip gossips = 2;
  {
    unsigned int count = this->gossips_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gossips(i));
    }
  }

  // .gen.Message messageCommon = 1;
  if (this->has_messagecommon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->messagecommon_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GossipFields::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gen.GossipFields)
  GOOGLE_DCHECK_NE(&from, this);
  const GossipFields* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GossipFields>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gen.GossipFields)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gen.GossipFields)
    MergeFrom(*source);
  }
}

void GossipFields::MergeFrom(const GossipFields& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gen.GossipFields)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gossips_.MergeFrom(from.gossips_);
  if (from.has_messagecommon()) {
    mutable_messagecommon()->::gen::Message::MergeFrom(from.messagecommon());
  }
}

void GossipFields::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gen.GossipFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GossipFields::CopyFrom(const GossipFields& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gen.GossipFields)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GossipFields::IsInitialized() const {
  return true;
}

void GossipFields::Swap(GossipFields* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GossipFields::InternalSwap(GossipFields* other) {
  gossips_.InternalSwap(&other->gossips_);
  std::swap(messagecommon_, other->messagecommon_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GossipFields::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GossipFields

// .gen.Message messageCommon = 1;
bool GossipFields::has_messagecommon() const {
  return this != internal_default_instance() && messagecommon_ != NULL;
}
void GossipFields::clear_messagecommon() {
  if (GetArenaNoVirtual() == NULL && messagecommon_ != NULL) delete messagecommon_;
  messagecommon_ = NULL;
}
const ::gen::Message& GossipFields::messagecommon() const {
  // @@protoc_insertion_point(field_get:gen.GossipFields.messageCommon)
  return messagecommon_ != NULL ? *messagecommon_
                         : *::gen::Message::internal_default_instance();
}
::gen::Message* GossipFields::mutable_messagecommon() {
  
  if (messagecommon_ == NULL) {
    messagecommon_ = new ::gen::Message;
  }
  // @@protoc_insertion_point(field_mutable:gen.GossipFields.messageCommon)
  return messagecommon_;
}
::gen::Message* GossipFields::release_messagecommon() {
  // @@protoc_insertion_point(field_release:gen.GossipFields.messageCommon)
  
  ::gen::Message* temp = messagecommon_;
  messagecommon_ = NULL;
  return temp;
}
void GossipFields::set_allocated_messagecommon(::gen::Message* messagecommon) {
  delete messagecommon_;
  messagecommon_ = messagecommon;
  if (messagecommon) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.GossipFields.messageCommon)
}

// repeated .gen.Gossip gossips = 2;
int GossipFields::gossips_size() const {
  return gossips_.size();
}
void GossipFields::clear_gossips() {
  gossips_.Clear();
}
const ::gen::Gossip& GossipFields::gossips(int index) const {
  // @@protoc_insertion_point(field_get:gen.GossipFields.gossips)
  return gossips_.Get(index);
}
::gen::Gossip* GossipFields::mutable_gossips(int index) {
  // @@protoc_insertion_point(field_mutable:gen.GossipFields.gossips)
  return gossips_.Mutable(index);
}
::gen::Gossip* GossipFields::add_gossips() {
  // @@protoc_insertion_point(field_add:gen.GossipFields.gossips)
  return gossips_.Add();
}
::google::protobuf::RepeatedPtrField< ::gen::Gossip >*
GossipFields::mutable_gossips() {
  // @@protoc_insertion_point(field_mutable_list:gen.GossipFields.gossips)
  return &gossips_;
}
const ::google::protobuf::RepeatedPtrField< ::gen::Gossip >&
GossipFields::gossips() const {
  // @@protoc_insertion_point(field_list:gen.GossipFields.gossips)
  return gossips_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kMessageTypeFieldNumber;
const int Message::kSourceAddressFieldNumber;
const int Message::kDestinationAddressFieldNumber;
const int Message::kIdFieldNumber;
const int Message::kPingReqFieldsFieldNumber;
const int Message::kAckFieldsFieldNumber;
const int Message::kGossipFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gen.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_sourceaddress()) {
    sourceaddress_ = new ::gen::Address(*from.sourceaddress_);
  } else {
    sourceaddress_ = NULL;
  }
  if (from.has_destinationaddress()) {
    destinationaddress_ = new ::gen::Address(*from.destinationaddress_);
  } else {
    destinationaddress_ = NULL;
  }
  messagetype_ = from.messagetype_;
  clear_has_customFields();
  switch (from.customFields_case()) {
    case kPingReqFields: {
      mutable_pingreqfields()->::gen::PingReqFields::MergeFrom(from.pingreqfields());
      break;
    }
    case kAckFields: {
      mutable_ackfields()->::gen::AckFields::MergeFrom(from.ackfields());
      break;
    }
    case kGossipFields: {
      mutable_gossipfields()->::gen::GossipFields::MergeFrom(from.gossipfields());
      break;
    }
    case CUSTOMFIELDS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:gen.Message)
}

void Message::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sourceaddress_, 0, reinterpret_cast<char*>(&messagetype_) -
    reinterpret_cast<char*>(&sourceaddress_) + sizeof(messagetype_));
  clear_has_customFields();
  _cached_size_ = 0;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:gen.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete sourceaddress_;
  }
  if (this != internal_default_instance()) {
    delete destinationaddress_;
  }
  if (has_customFields()) {
    clear_customFields();
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::clear_customFields() {
// @@protoc_insertion_point(one_of_clear_start:gen.Message)
  switch (customFields_case()) {
    case kPingReqFields: {
      delete customFields_.pingreqfields_;
      break;
    }
    case kAckFields: {
      delete customFields_.ackfields_;
      break;
    }
    case kGossipFields: {
      delete customFields_.gossipfields_;
      break;
    }
    case CUSTOMFIELDS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CUSTOMFIELDS_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:gen.Message)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && sourceaddress_ != NULL) {
    delete sourceaddress_;
  }
  sourceaddress_ = NULL;
  if (GetArenaNoVirtual() == NULL && destinationaddress_ != NULL) {
    delete destinationaddress_;
  }
  destinationaddress_ = NULL;
  messagetype_ = 0;
  clear_customFields();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gen.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gen.MessageType messageType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_messagetype(static_cast< ::gen::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gen.Address sourceAddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sourceaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gen.Address destinationAddress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_destinationaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gen.Message.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gen.PingReqFields pingReqFields = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pingreqfields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gen.AckFields ackFields = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ackfields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gen.GossipFields gossipFields = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gossipfields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gen.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gen.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gen.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.MessageType messageType = 1;
  if (this->messagetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->messagetype(), output);
  }

  // .gen.Address sourceAddress = 2;
  if (this->has_sourceaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sourceaddress_, output);
  }

  // .gen.Address destinationAddress = 3;
  if (this->has_destinationaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->destinationaddress_, output);
  }

  // string id = 4;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gen.Message.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->id(), output);
  }

  // .gen.PingReqFields pingReqFields = 5;
  if (has_pingreqfields()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *customFields_.pingreqfields_, output);
  }

  // .gen.AckFields ackFields = 6;
  if (has_ackfields()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *customFields_.ackfields_, output);
  }

  // .gen.GossipFields gossipFields = 7;
  if (has_gossipfields()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *customFields_.gossipfields_, output);
  }

  // @@protoc_insertion_point(serialize_end:gen.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gen.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.MessageType messageType = 1;
  if (this->messagetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->messagetype(), target);
  }

  // .gen.Address sourceAddress = 2;
  if (this->has_sourceaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->sourceaddress_, deterministic, target);
  }

  // .gen.Address destinationAddress = 3;
  if (this->has_destinationaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->destinationaddress_, deterministic, target);
  }

  // string id = 4;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gen.Message.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->id(), target);
  }

  // .gen.PingReqFields pingReqFields = 5;
  if (has_pingreqfields()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *customFields_.pingreqfields_, deterministic, target);
  }

  // .gen.AckFields ackFields = 6;
  if (has_ackfields()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *customFields_.ackfields_, deterministic, target);
  }

  // .gen.GossipFields gossipFields = 7;
  if (has_gossipfields()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *customFields_.gossipfields_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gen.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gen.Message)
  size_t total_size = 0;

  // string id = 4;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .gen.Address sourceAddress = 2;
  if (this->has_sourceaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sourceaddress_);
  }

  // .gen.Address destinationAddress = 3;
  if (this->has_destinationaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->destinationaddress_);
  }

  // .gen.MessageType messageType = 1;
  if (this->messagetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());
  }

  switch (customFields_case()) {
    // .gen.PingReqFields pingReqFields = 5;
    case kPingReqFields: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *customFields_.pingreqfields_);
      break;
    }
    // .gen.AckFields ackFields = 6;
    case kAckFields: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *customFields_.ackfields_);
      break;
    }
    // .gen.GossipFields gossipFields = 7;
    case kGossipFields: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *customFields_.gossipfields_);
      break;
    }
    case CUSTOMFIELDS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gen.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gen.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gen.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gen.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_sourceaddress()) {
    mutable_sourceaddress()->::gen::Address::MergeFrom(from.sourceaddress());
  }
  if (from.has_destinationaddress()) {
    mutable_destinationaddress()->::gen::Address::MergeFrom(from.destinationaddress());
  }
  if (from.messagetype() != 0) {
    set_messagetype(from.messagetype());
  }
  switch (from.customFields_case()) {
    case kPingReqFields: {
      mutable_pingreqfields()->::gen::PingReqFields::MergeFrom(from.pingreqfields());
      break;
    }
    case kAckFields: {
      mutable_ackfields()->::gen::AckFields::MergeFrom(from.ackfields());
      break;
    }
    case kGossipFields: {
      mutable_gossipfields()->::gen::GossipFields::MergeFrom(from.gossipfields());
      break;
    }
    case CUSTOMFIELDS_NOT_SET: {
      break;
    }
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gen.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gen.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  id_.Swap(&other->id_);
  std::swap(sourceaddress_, other->sourceaddress_);
  std::swap(destinationaddress_, other->destinationaddress_);
  std::swap(messagetype_, other->messagetype_);
  std::swap(customFields_, other->customFields_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// .gen.MessageType messageType = 1;
void Message::clear_messagetype() {
  messagetype_ = 0;
}
::gen::MessageType Message::messagetype() const {
  // @@protoc_insertion_point(field_get:gen.Message.messageType)
  return static_cast< ::gen::MessageType >(messagetype_);
}
void Message::set_messagetype(::gen::MessageType value) {
  
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:gen.Message.messageType)
}

// .gen.Address sourceAddress = 2;
bool Message::has_sourceaddress() const {
  return this != internal_default_instance() && sourceaddress_ != NULL;
}
void Message::clear_sourceaddress() {
  if (GetArenaNoVirtual() == NULL && sourceaddress_ != NULL) delete sourceaddress_;
  sourceaddress_ = NULL;
}
const ::gen::Address& Message::sourceaddress() const {
  // @@protoc_insertion_point(field_get:gen.Message.sourceAddress)
  return sourceaddress_ != NULL ? *sourceaddress_
                         : *::gen::Address::internal_default_instance();
}
::gen::Address* Message::mutable_sourceaddress() {
  
  if (sourceaddress_ == NULL) {
    sourceaddress_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.Message.sourceAddress)
  return sourceaddress_;
}
::gen::Address* Message::release_sourceaddress() {
  // @@protoc_insertion_point(field_release:gen.Message.sourceAddress)
  
  ::gen::Address* temp = sourceaddress_;
  sourceaddress_ = NULL;
  return temp;
}
void Message::set_allocated_sourceaddress(::gen::Address* sourceaddress) {
  delete sourceaddress_;
  sourceaddress_ = sourceaddress;
  if (sourceaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Message.sourceAddress)
}

// .gen.Address destinationAddress = 3;
bool Message::has_destinationaddress() const {
  return this != internal_default_instance() && destinationaddress_ != NULL;
}
void Message::clear_destinationaddress() {
  if (GetArenaNoVirtual() == NULL && destinationaddress_ != NULL) delete destinationaddress_;
  destinationaddress_ = NULL;
}
const ::gen::Address& Message::destinationaddress() const {
  // @@protoc_insertion_point(field_get:gen.Message.destinationAddress)
  return destinationaddress_ != NULL ? *destinationaddress_
                         : *::gen::Address::internal_default_instance();
}
::gen::Address* Message::mutable_destinationaddress() {
  
  if (destinationaddress_ == NULL) {
    destinationaddress_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.Message.destinationAddress)
  return destinationaddress_;
}
::gen::Address* Message::release_destinationaddress() {
  // @@protoc_insertion_point(field_release:gen.Message.destinationAddress)
  
  ::gen::Address* temp = destinationaddress_;
  destinationaddress_ = NULL;
  return temp;
}
void Message::set_allocated_destinationaddress(::gen::Address* destinationaddress) {
  delete destinationaddress_;
  destinationaddress_ = destinationaddress;
  if (destinationaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Message.destinationAddress)
}

// string id = 4;
void Message::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Message::id() const {
  // @@protoc_insertion_point(field_get:gen.Message.id)
  return id_.GetNoArena();
}
void Message::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gen.Message.id)
}
#if LANG_CXX11
void Message::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gen.Message.id)
}
#endif
void Message::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gen.Message.id)
}
void Message::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gen.Message.id)
}
::std::string* Message::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:gen.Message.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message::release_id() {
  // @@protoc_insertion_point(field_release:gen.Message.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:gen.Message.id)
}

// .gen.PingReqFields pingReqFields = 5;
bool Message::has_pingreqfields() const {
  return customFields_case() == kPingReqFields;
}
void Message::set_has_pingreqfields() {
  _oneof_case_[0] = kPingReqFields;
}
void Message::clear_pingreqfields() {
  if (has_pingreqfields()) {
    delete customFields_.pingreqfields_;
    clear_has_customFields();
  }
}
 const ::gen::PingReqFields& Message::pingreqfields() const {
  // @@protoc_insertion_point(field_get:gen.Message.pingReqFields)
  return has_pingreqfields()
      ? *customFields_.pingreqfields_
      : ::gen::PingReqFields::default_instance();
}
::gen::PingReqFields* Message::mutable_pingreqfields() {
  if (!has_pingreqfields()) {
    clear_customFields();
    set_has_pingreqfields();
    customFields_.pingreqfields_ = new ::gen::PingReqFields;
  }
  // @@protoc_insertion_point(field_mutable:gen.Message.pingReqFields)
  return customFields_.pingreqfields_;
}
::gen::PingReqFields* Message::release_pingreqfields() {
  // @@protoc_insertion_point(field_release:gen.Message.pingReqFields)
  if (has_pingreqfields()) {
    clear_has_customFields();
    ::gen::PingReqFields* temp = customFields_.pingreqfields_;
    customFields_.pingreqfields_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_pingreqfields(::gen::PingReqFields* pingreqfields) {
  clear_customFields();
  if (pingreqfields) {
    set_has_pingreqfields();
    customFields_.pingreqfields_ = pingreqfields;
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Message.pingReqFields)
}

// .gen.AckFields ackFields = 6;
bool Message::has_ackfields() const {
  return customFields_case() == kAckFields;
}
void Message::set_has_ackfields() {
  _oneof_case_[0] = kAckFields;
}
void Message::clear_ackfields() {
  if (has_ackfields()) {
    delete customFields_.ackfields_;
    clear_has_customFields();
  }
}
 const ::gen::AckFields& Message::ackfields() const {
  // @@protoc_insertion_point(field_get:gen.Message.ackFields)
  return has_ackfields()
      ? *customFields_.ackfields_
      : ::gen::AckFields::default_instance();
}
::gen::AckFields* Message::mutable_ackfields() {
  if (!has_ackfields()) {
    clear_customFields();
    set_has_ackfields();
    customFields_.ackfields_ = new ::gen::AckFields;
  }
  // @@protoc_insertion_point(field_mutable:gen.Message.ackFields)
  return customFields_.ackfields_;
}
::gen::AckFields* Message::release_ackfields() {
  // @@protoc_insertion_point(field_release:gen.Message.ackFields)
  if (has_ackfields()) {
    clear_has_customFields();
    ::gen::AckFields* temp = customFields_.ackfields_;
    customFields_.ackfields_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_ackfields(::gen::AckFields* ackfields) {
  clear_customFields();
  if (ackfields) {
    set_has_ackfields();
    customFields_.ackfields_ = ackfields;
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Message.ackFields)
}

// .gen.GossipFields gossipFields = 7;
bool Message::has_gossipfields() const {
  return customFields_case() == kGossipFields;
}
void Message::set_has_gossipfields() {
  _oneof_case_[0] = kGossipFields;
}
void Message::clear_gossipfields() {
  if (has_gossipfields()) {
    delete customFields_.gossipfields_;
    clear_has_customFields();
  }
}
 const ::gen::GossipFields& Message::gossipfields() const {
  // @@protoc_insertion_point(field_get:gen.Message.gossipFields)
  return has_gossipfields()
      ? *customFields_.gossipfields_
      : ::gen::GossipFields::default_instance();
}
::gen::GossipFields* Message::mutable_gossipfields() {
  if (!has_gossipfields()) {
    clear_customFields();
    set_has_gossipfields();
    customFields_.gossipfields_ = new ::gen::GossipFields;
  }
  // @@protoc_insertion_point(field_mutable:gen.Message.gossipFields)
  return customFields_.gossipfields_;
}
::gen::GossipFields* Message::release_gossipfields() {
  // @@protoc_insertion_point(field_release:gen.Message.gossipFields)
  if (has_gossipfields()) {
    clear_has_customFields();
    ::gen::GossipFields* temp = customFields_.gossipfields_;
    customFields_.gossipfields_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void Message::set_allocated_gossipfields(::gen::GossipFields* gossipfields) {
  clear_customFields();
  if (gossipfields) {
    set_has_gossipfields();
    customFields_.gossipfields_ = gossipfields;
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Message.gossipFields)
}

bool Message::has_customFields() const {
  return customFields_case() != CUSTOMFIELDS_NOT_SET;
}
void Message::clear_has_customFields() {
  _oneof_case_[0] = CUSTOMFIELDS_NOT_SET;
}
Message::CustomFieldsCase Message::customFields_case() const {
  return Message::CustomFieldsCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gen

// @@protoc_insertion_point(global_scope)
