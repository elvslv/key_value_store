// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gen {
class NodeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Node> {
} _Node_default_instance_;
class EventDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Event> {
} _Event_default_instance_;
class MessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Message> {
} _Message_default_instance_;

namespace protobuf_Message_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, event_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, messagetype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, sourceaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, destinationaddress_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, originalid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, events_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, targetaddress_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Node)},
  { 6, -1, sizeof(Event)},
  { 13, -1, sizeof(Message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Node_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Message_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _Node_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Event_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Message_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::gen::protobuf_Address_2eproto::InitDefaults();
  _Node_default_instance_.DefaultConstruct();
  _Event_default_instance_.DefaultConstruct();
  _Message_default_instance_.DefaultConstruct();
  _Node_default_instance_.get_mutable()->address_ = const_cast< ::gen::Address*>(
      ::gen::Address::internal_default_instance());
  _Event_default_instance_.get_mutable()->address_ = const_cast< ::gen::Address*>(
      ::gen::Address::internal_default_instance());
  _Message_default_instance_.get_mutable()->sourceaddress_ = const_cast< ::gen::Address*>(
      ::gen::Address::internal_default_instance());
  _Message_default_instance_.get_mutable()->destinationaddress_ = const_cast< ::gen::Address*>(
      ::gen::Address::internal_default_instance());
  _Message_default_instance_.get_mutable()->targetaddress_ = const_cast< ::gen::Address*>(
      ::gen::Address::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rMessage.proto\022\003gen\032\rAddress.proto\"%\n\004N"
      "ode\022\035\n\007address\030\001 \001(\0132\014.gen.Address\"F\n\005Ev"
      "ent\022\036\n\005event\030\001 \001(\0162\017.gen.EventTypes\022\035\n\007a"
      "ddress\030\002 \001(\0132\014.gen.Address\"\340\001\n\007Message\022%"
      "\n\013messageType\030\001 \001(\0162\020.gen.MessageType\022#\n"
      "\rsourceAddress\030\002 \001(\0132\014.gen.Address\022(\n\022de"
      "stinationAddress\030\003 \001(\0132\014.gen.Address\022\n\n\002"
      "id\030\004 \001(\t\022\022\n\noriginalId\030\005 \001(\t\022\032\n\006events\030\006"
      " \003(\0132\n.gen.Event\022#\n\rtargetAddress\030\007 \001(\0132"
      "\014.gen.Address*T\n\013MessageType\022\010\n\004PING\020\000\022\007"
      "\n\003ACK\020\001\022\014\n\010PING_REQ\020\002\022\013\n\007JOINREQ\020\003\022\013\n\007JO"
      "INREP\020\004\022\n\n\006GOSSIP\020\005*$\n\nEventTypes\022\n\n\006JOI"
      "NED\020\000\022\n\n\006FAILED\020\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 505);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
  ::gen::protobuf_Address_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_Message_2eproto

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_enum_descriptors[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EventTypes_descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_enum_descriptors[1];
}
bool EventTypes_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gen.Node)
}
Node::Node(const Node& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::gen::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:gen.Node)
}

void Node::SharedCtor() {
  address_ = NULL;
  _cached_size_ = 0;
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:gen.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void Node::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Node& Node::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

Node* Node::New(::google::protobuf::Arena* arena) const {
  Node* n = new Node;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Node::Clear() {
// @@protoc_insertion_point(message_clear_start:gen.Node)
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gen.Node)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gen.Address address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gen.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gen.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gen.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.Address address = 1;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->address_, output);
  }

  // @@protoc_insertion_point(serialize_end:gen.Node)
}

::google::protobuf::uint8* Node::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gen.Node)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.Address address = 1;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->address_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gen.Node)
  return target;
}

size_t Node::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gen.Node)
  size_t total_size = 0;

  // .gen.Address address = 1;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gen.Node)
  GOOGLE_DCHECK_NE(&from, this);
  const Node* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gen.Node)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gen.Node)
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gen.Node)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    mutable_address()->::gen::Address::MergeFrom(from.address());
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gen.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gen.Node)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  std::swap(address_, other->address_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Node

// .gen.Address address = 1;
bool Node::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void Node::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::gen::Address& Node::address() const {
  // @@protoc_insertion_point(field_get:gen.Node.address)
  return address_ != NULL ? *address_
                         : *::gen::Address::internal_default_instance();
}
::gen::Address* Node::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.Node.address)
  return address_;
}
::gen::Address* Node::release_address() {
  // @@protoc_insertion_point(field_release:gen.Node.address)
  
  ::gen::Address* temp = address_;
  address_ = NULL;
  return temp;
}
void Node::set_allocated_address(::gen::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Node.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kEventFieldNumber;
const int Event::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gen.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::gen::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  event_ = from.event_;
  // @@protoc_insertion_point(copy_constructor:gen.Event)
}

void Event::SharedCtor() {
  ::memset(&address_, 0, reinterpret_cast<char*>(&event_) -
    reinterpret_cast<char*>(&address_) + sizeof(event_));
  _cached_size_ = 0;
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:gen.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  if (this != internal_default_instance()) {
    delete address_;
  }
}

void Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

Event* Event::New(::google::protobuf::Arena* arena) const {
  Event* n = new Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:gen.Event)
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  event_ = 0;
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gen.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gen.EventTypes event = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_event(static_cast< ::gen::EventTypes >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gen.Address address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gen.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gen.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gen.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.EventTypes event = 1;
  if (this->event() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event(), output);
  }

  // .gen.Address address = 2;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->address_, output);
  }

  // @@protoc_insertion_point(serialize_end:gen.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gen.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.EventTypes event = 1;
  if (this->event() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event(), target);
  }

  // .gen.Address address = 2;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->address_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gen.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gen.Event)
  size_t total_size = 0;

  // .gen.Address address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->address_);
  }

  // .gen.EventTypes event = 1;
  if (this->event() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gen.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gen.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gen.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gen.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    mutable_address()->::gen::Address::MergeFrom(from.address());
  }
  if (from.event() != 0) {
    set_event(from.event());
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gen.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gen.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  std::swap(address_, other->address_);
  std::swap(event_, other->event_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Event

// .gen.EventTypes event = 1;
void Event::clear_event() {
  event_ = 0;
}
::gen::EventTypes Event::event() const {
  // @@protoc_insertion_point(field_get:gen.Event.event)
  return static_cast< ::gen::EventTypes >(event_);
}
void Event::set_event(::gen::EventTypes value) {
  
  event_ = value;
  // @@protoc_insertion_point(field_set:gen.Event.event)
}

// .gen.Address address = 2;
bool Event::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
void Event::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
const ::gen::Address& Event::address() const {
  // @@protoc_insertion_point(field_get:gen.Event.address)
  return address_ != NULL ? *address_
                         : *::gen::Address::internal_default_instance();
}
::gen::Address* Event::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.Event.address)
  return address_;
}
::gen::Address* Event::release_address() {
  // @@protoc_insertion_point(field_release:gen.Event.address)
  
  ::gen::Address* temp = address_;
  address_ = NULL;
  return temp;
}
void Event::set_allocated_address(::gen::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Event.address)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kMessageTypeFieldNumber;
const int Message::kSourceAddressFieldNumber;
const int Message::kDestinationAddressFieldNumber;
const int Message::kIdFieldNumber;
const int Message::kOriginalIdFieldNumber;
const int Message::kEventsFieldNumber;
const int Message::kTargetAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_Message_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:gen.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      events_(from.events_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  originalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.originalid().size() > 0) {
    originalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.originalid_);
  }
  if (from.has_sourceaddress()) {
    sourceaddress_ = new ::gen::Address(*from.sourceaddress_);
  } else {
    sourceaddress_ = NULL;
  }
  if (from.has_destinationaddress()) {
    destinationaddress_ = new ::gen::Address(*from.destinationaddress_);
  } else {
    destinationaddress_ = NULL;
  }
  if (from.has_targetaddress()) {
    targetaddress_ = new ::gen::Address(*from.targetaddress_);
  } else {
    targetaddress_ = NULL;
  }
  messagetype_ = from.messagetype_;
  // @@protoc_insertion_point(copy_constructor:gen.Message)
}

void Message::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originalid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sourceaddress_, 0, reinterpret_cast<char*>(&messagetype_) -
    reinterpret_cast<char*>(&sourceaddress_) + sizeof(messagetype_));
  _cached_size_ = 0;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:gen.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originalid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete sourceaddress_;
  }
  if (this != internal_default_instance()) {
    delete destinationaddress_;
  }
  if (this != internal_default_instance()) {
    delete targetaddress_;
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  protobuf_Message_2eproto::InitDefaults();
  return *internal_default_instance();
}

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:gen.Message)
  events_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  originalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && sourceaddress_ != NULL) {
    delete sourceaddress_;
  }
  sourceaddress_ = NULL;
  if (GetArenaNoVirtual() == NULL && destinationaddress_ != NULL) {
    delete destinationaddress_;
  }
  destinationaddress_ = NULL;
  if (GetArenaNoVirtual() == NULL && targetaddress_ != NULL) {
    delete targetaddress_;
  }
  targetaddress_ = NULL;
  messagetype_ = 0;
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gen.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .gen.MessageType messageType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_messagetype(static_cast< ::gen::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gen.Address sourceAddress = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sourceaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gen.Address destinationAddress = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_destinationaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gen.Message.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string originalId = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_originalid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->originalid().data(), this->originalid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gen.Message.originalId"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gen.Event events = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_events()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .gen.Address targetAddress = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_targetaddress()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gen.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gen.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gen.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.MessageType messageType = 1;
  if (this->messagetype() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->messagetype(), output);
  }

  // .gen.Address sourceAddress = 2;
  if (this->has_sourceaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sourceaddress_, output);
  }

  // .gen.Address destinationAddress = 3;
  if (this->has_destinationaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->destinationaddress_, output);
  }

  // string id = 4;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gen.Message.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->id(), output);
  }

  // string originalId = 5;
  if (this->originalid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->originalid().data(), this->originalid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gen.Message.originalId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->originalid(), output);
  }

  // repeated .gen.Event events = 6;
  for (unsigned int i = 0, n = this->events_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->events(i), output);
  }

  // .gen.Address targetAddress = 7;
  if (this->has_targetaddress()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->targetaddress_, output);
  }

  // @@protoc_insertion_point(serialize_end:gen.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:gen.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gen.MessageType messageType = 1;
  if (this->messagetype() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->messagetype(), target);
  }

  // .gen.Address sourceAddress = 2;
  if (this->has_sourceaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->sourceaddress_, deterministic, target);
  }

  // .gen.Address destinationAddress = 3;
  if (this->has_destinationaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->destinationaddress_, deterministic, target);
  }

  // string id = 4;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gen.Message.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->id(), target);
  }

  // string originalId = 5;
  if (this->originalid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->originalid().data(), this->originalid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gen.Message.originalId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->originalid(), target);
  }

  // repeated .gen.Event events = 6;
  for (unsigned int i = 0, n = this->events_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->events(i), deterministic, target);
  }

  // .gen.Address targetAddress = 7;
  if (this->has_targetaddress()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->targetaddress_, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:gen.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gen.Message)
  size_t total_size = 0;

  // repeated .gen.Event events = 6;
  {
    unsigned int count = this->events_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->events(i));
    }
  }

  // string id = 4;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string originalId = 5;
  if (this->originalid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->originalid());
  }

  // .gen.Address sourceAddress = 2;
  if (this->has_sourceaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sourceaddress_);
  }

  // .gen.Address destinationAddress = 3;
  if (this->has_destinationaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->destinationaddress_);
  }

  // .gen.Address targetAddress = 7;
  if (this->has_targetaddress()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->targetaddress_);
  }

  // .gen.MessageType messageType = 1;
  if (this->messagetype() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->messagetype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gen.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gen.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gen.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gen.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  events_.MergeFrom(from.events_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.originalid().size() > 0) {

    originalid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.originalid_);
  }
  if (from.has_sourceaddress()) {
    mutable_sourceaddress()->::gen::Address::MergeFrom(from.sourceaddress());
  }
  if (from.has_destinationaddress()) {
    mutable_destinationaddress()->::gen::Address::MergeFrom(from.destinationaddress());
  }
  if (from.has_targetaddress()) {
    mutable_targetaddress()->::gen::Address::MergeFrom(from.targetaddress());
  }
  if (from.messagetype() != 0) {
    set_messagetype(from.messagetype());
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gen.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gen.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  events_.InternalSwap(&other->events_);
  id_.Swap(&other->id_);
  originalid_.Swap(&other->originalid_);
  std::swap(sourceaddress_, other->sourceaddress_);
  std::swap(destinationaddress_, other->destinationaddress_);
  std::swap(targetaddress_, other->targetaddress_);
  std::swap(messagetype_, other->messagetype_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// .gen.MessageType messageType = 1;
void Message::clear_messagetype() {
  messagetype_ = 0;
}
::gen::MessageType Message::messagetype() const {
  // @@protoc_insertion_point(field_get:gen.Message.messageType)
  return static_cast< ::gen::MessageType >(messagetype_);
}
void Message::set_messagetype(::gen::MessageType value) {
  
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:gen.Message.messageType)
}

// .gen.Address sourceAddress = 2;
bool Message::has_sourceaddress() const {
  return this != internal_default_instance() && sourceaddress_ != NULL;
}
void Message::clear_sourceaddress() {
  if (GetArenaNoVirtual() == NULL && sourceaddress_ != NULL) delete sourceaddress_;
  sourceaddress_ = NULL;
}
const ::gen::Address& Message::sourceaddress() const {
  // @@protoc_insertion_point(field_get:gen.Message.sourceAddress)
  return sourceaddress_ != NULL ? *sourceaddress_
                         : *::gen::Address::internal_default_instance();
}
::gen::Address* Message::mutable_sourceaddress() {
  
  if (sourceaddress_ == NULL) {
    sourceaddress_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.Message.sourceAddress)
  return sourceaddress_;
}
::gen::Address* Message::release_sourceaddress() {
  // @@protoc_insertion_point(field_release:gen.Message.sourceAddress)
  
  ::gen::Address* temp = sourceaddress_;
  sourceaddress_ = NULL;
  return temp;
}
void Message::set_allocated_sourceaddress(::gen::Address* sourceaddress) {
  delete sourceaddress_;
  sourceaddress_ = sourceaddress;
  if (sourceaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Message.sourceAddress)
}

// .gen.Address destinationAddress = 3;
bool Message::has_destinationaddress() const {
  return this != internal_default_instance() && destinationaddress_ != NULL;
}
void Message::clear_destinationaddress() {
  if (GetArenaNoVirtual() == NULL && destinationaddress_ != NULL) delete destinationaddress_;
  destinationaddress_ = NULL;
}
const ::gen::Address& Message::destinationaddress() const {
  // @@protoc_insertion_point(field_get:gen.Message.destinationAddress)
  return destinationaddress_ != NULL ? *destinationaddress_
                         : *::gen::Address::internal_default_instance();
}
::gen::Address* Message::mutable_destinationaddress() {
  
  if (destinationaddress_ == NULL) {
    destinationaddress_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.Message.destinationAddress)
  return destinationaddress_;
}
::gen::Address* Message::release_destinationaddress() {
  // @@protoc_insertion_point(field_release:gen.Message.destinationAddress)
  
  ::gen::Address* temp = destinationaddress_;
  destinationaddress_ = NULL;
  return temp;
}
void Message::set_allocated_destinationaddress(::gen::Address* destinationaddress) {
  delete destinationaddress_;
  destinationaddress_ = destinationaddress;
  if (destinationaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Message.destinationAddress)
}

// string id = 4;
void Message::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Message::id() const {
  // @@protoc_insertion_point(field_get:gen.Message.id)
  return id_.GetNoArena();
}
void Message::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gen.Message.id)
}
#if LANG_CXX11
void Message::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gen.Message.id)
}
#endif
void Message::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gen.Message.id)
}
void Message::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gen.Message.id)
}
::std::string* Message::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:gen.Message.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message::release_id() {
  // @@protoc_insertion_point(field_release:gen.Message.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:gen.Message.id)
}

// string originalId = 5;
void Message::clear_originalid() {
  originalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Message::originalid() const {
  // @@protoc_insertion_point(field_get:gen.Message.originalId)
  return originalid_.GetNoArena();
}
void Message::set_originalid(const ::std::string& value) {
  
  originalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gen.Message.originalId)
}
#if LANG_CXX11
void Message::set_originalid(::std::string&& value) {
  
  originalid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gen.Message.originalId)
}
#endif
void Message::set_originalid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  originalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gen.Message.originalId)
}
void Message::set_originalid(const char* value, size_t size) {
  
  originalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gen.Message.originalId)
}
::std::string* Message::mutable_originalid() {
  
  // @@protoc_insertion_point(field_mutable:gen.Message.originalId)
  return originalid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Message::release_originalid() {
  // @@protoc_insertion_point(field_release:gen.Message.originalId)
  
  return originalid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Message::set_allocated_originalid(::std::string* originalid) {
  if (originalid != NULL) {
    
  } else {
    
  }
  originalid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), originalid);
  // @@protoc_insertion_point(field_set_allocated:gen.Message.originalId)
}

// repeated .gen.Event events = 6;
int Message::events_size() const {
  return events_.size();
}
void Message::clear_events() {
  events_.Clear();
}
const ::gen::Event& Message::events(int index) const {
  // @@protoc_insertion_point(field_get:gen.Message.events)
  return events_.Get(index);
}
::gen::Event* Message::mutable_events(int index) {
  // @@protoc_insertion_point(field_mutable:gen.Message.events)
  return events_.Mutable(index);
}
::gen::Event* Message::add_events() {
  // @@protoc_insertion_point(field_add:gen.Message.events)
  return events_.Add();
}
::google::protobuf::RepeatedPtrField< ::gen::Event >*
Message::mutable_events() {
  // @@protoc_insertion_point(field_mutable_list:gen.Message.events)
  return &events_;
}
const ::google::protobuf::RepeatedPtrField< ::gen::Event >&
Message::events() const {
  // @@protoc_insertion_point(field_list:gen.Message.events)
  return events_;
}

// .gen.Address targetAddress = 7;
bool Message::has_targetaddress() const {
  return this != internal_default_instance() && targetaddress_ != NULL;
}
void Message::clear_targetaddress() {
  if (GetArenaNoVirtual() == NULL && targetaddress_ != NULL) delete targetaddress_;
  targetaddress_ = NULL;
}
const ::gen::Address& Message::targetaddress() const {
  // @@protoc_insertion_point(field_get:gen.Message.targetAddress)
  return targetaddress_ != NULL ? *targetaddress_
                         : *::gen::Address::internal_default_instance();
}
::gen::Address* Message::mutable_targetaddress() {
  
  if (targetaddress_ == NULL) {
    targetaddress_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.Message.targetAddress)
  return targetaddress_;
}
::gen::Address* Message::release_targetaddress() {
  // @@protoc_insertion_point(field_release:gen.Message.targetAddress)
  
  ::gen::Address* temp = targetaddress_;
  targetaddress_ = NULL;
  return temp;
}
void Message::set_allocated_targetaddress(::gen::Address* targetaddress) {
  delete targetaddress_;
  targetaddress_ = targetaddress;
  if (targetaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.Message.targetAddress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace gen

// @@protoc_insertion_point(global_scope)
