// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MembershipProtocolMessage.proto

#ifndef PROTOBUF_MembershipProtocolMessage_2eproto__INCLUDED
#define PROTOBUF_MembershipProtocolMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "Address.pb.h"
// @@protoc_insertion_point(includes)
namespace gen {
class Address;
class AddressDefaultTypeInternal;
extern AddressDefaultTypeInternal _Address_default_instance_;
namespace membership_protocol {
class AckFields;
class AckFieldsDefaultTypeInternal;
extern AckFieldsDefaultTypeInternal _AckFields_default_instance_;
class Gossip;
class GossipDefaultTypeInternal;
extern GossipDefaultTypeInternal _Gossip_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class PingFields;
class PingFieldsDefaultTypeInternal;
extern PingFieldsDefaultTypeInternal _PingFields_default_instance_;
class PingReqFields;
class PingReqFieldsDefaultTypeInternal;
extern PingReqFieldsDefaultTypeInternal _PingReqFields_default_instance_;
}  // namespace membership_protocol
}  // namespace gen

namespace gen {
namespace membership_protocol {

namespace protobuf_MembershipProtocolMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_MembershipProtocolMessage_2eproto

enum MessageType {
  PING = 0,
  ACK = 1,
  PING_REQ = 2,
  JOINREQ = 3,
  JOINREP = 4,
  MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MessageType_IsValid(int value);
const MessageType MessageType_MIN = PING;
const MessageType MessageType_MAX = JOINREP;
const int MessageType_ARRAYSIZE = MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MessageType_descriptor();
inline const ::std::string& MessageType_Name(MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MessageType_descriptor(), value);
}
inline bool MessageType_Parse(
    const ::std::string& name, MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MessageType>(
    MessageType_descriptor(), name, value);
}
enum GossipEventTypes {
  JOINED = 0,
  FAILED = 1,
  GossipEventTypes_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GossipEventTypes_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GossipEventTypes_IsValid(int value);
const GossipEventTypes GossipEventTypes_MIN = JOINED;
const GossipEventTypes GossipEventTypes_MAX = FAILED;
const int GossipEventTypes_ARRAYSIZE = GossipEventTypes_MAX + 1;

const ::google::protobuf::EnumDescriptor* GossipEventTypes_descriptor();
inline const ::std::string& GossipEventTypes_Name(GossipEventTypes value) {
  return ::google::protobuf::internal::NameOfEnum(
    GossipEventTypes_descriptor(), value);
}
inline bool GossipEventTypes_Parse(
    const ::std::string& name, GossipEventTypes* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GossipEventTypes>(
    GossipEventTypes_descriptor(), name, value);
}
// ===================================================================

class Gossip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gen.membership_protocol.Gossip) */ {
 public:
  Gossip();
  virtual ~Gossip();

  Gossip(const Gossip& from);

  inline Gossip& operator=(const Gossip& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Gossip& default_instance();

  static inline const Gossip* internal_default_instance() {
    return reinterpret_cast<const Gossip*>(
               &_Gossip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Gossip* other);

  // implements Message ----------------------------------------------

  inline Gossip* New() const PROTOBUF_FINAL { return New(NULL); }

  Gossip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Gossip& from);
  void MergeFrom(const Gossip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Gossip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .gen.Address address = 2;
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 2;
  const ::gen::Address& address() const;
  ::gen::Address* mutable_address();
  ::gen::Address* release_address();
  void set_allocated_address(::gen::Address* address);

  // .gen.membership_protocol.GossipEventTypes event = 1;
  void clear_event();
  static const int kEventFieldNumber = 1;
  ::gen::membership_protocol::GossipEventTypes event() const;
  void set_event(::gen::membership_protocol::GossipEventTypes value);

  // @@protoc_insertion_point(class_scope:gen.membership_protocol.Gossip)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::gen::Address* address_;
  int event_;
  mutable int _cached_size_;
  friend struct protobuf_MembershipProtocolMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PingFields : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gen.membership_protocol.PingFields) */ {
 public:
  PingFields();
  virtual ~PingFields();

  PingFields(const PingFields& from);

  inline PingFields& operator=(const PingFields& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingFields& default_instance();

  static inline const PingFields* internal_default_instance() {
    return reinterpret_cast<const PingFields*>(
               &_PingFields_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(PingFields* other);

  // implements Message ----------------------------------------------

  inline PingFields* New() const PROTOBUF_FINAL { return New(NULL); }

  PingFields* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PingFields& from);
  void MergeFrom(const PingFields& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PingFields* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .gen.Address targetAddress = 1;
  bool has_targetaddress() const;
  void clear_targetaddress();
  static const int kTargetAddressFieldNumber = 1;
  const ::gen::Address& targetaddress() const;
  ::gen::Address* mutable_targetaddress();
  ::gen::Address* release_targetaddress();
  void set_allocated_targetaddress(::gen::Address* targetaddress);

  // @@protoc_insertion_point(class_scope:gen.membership_protocol.PingFields)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::gen::Address* targetaddress_;
  mutable int _cached_size_;
  friend struct protobuf_MembershipProtocolMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PingReqFields : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gen.membership_protocol.PingReqFields) */ {
 public:
  PingReqFields();
  virtual ~PingReqFields();

  PingReqFields(const PingReqFields& from);

  inline PingReqFields& operator=(const PingReqFields& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PingReqFields& default_instance();

  static inline const PingReqFields* internal_default_instance() {
    return reinterpret_cast<const PingReqFields*>(
               &_PingReqFields_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PingReqFields* other);

  // implements Message ----------------------------------------------

  inline PingReqFields* New() const PROTOBUF_FINAL { return New(NULL); }

  PingReqFields* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PingReqFields& from);
  void MergeFrom(const PingReqFields& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PingReqFields* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .gen.Address targetAddress = 1;
  bool has_targetaddress() const;
  void clear_targetaddress();
  static const int kTargetAddressFieldNumber = 1;
  const ::gen::Address& targetaddress() const;
  ::gen::Address* mutable_targetaddress();
  ::gen::Address* release_targetaddress();
  void set_allocated_targetaddress(::gen::Address* targetaddress);

  // @@protoc_insertion_point(class_scope:gen.membership_protocol.PingReqFields)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::gen::Address* targetaddress_;
  mutable int _cached_size_;
  friend struct protobuf_MembershipProtocolMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AckFields : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gen.membership_protocol.AckFields) */ {
 public:
  AckFields();
  virtual ~AckFields();

  AckFields(const AckFields& from);

  inline AckFields& operator=(const AckFields& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AckFields& default_instance();

  static inline const AckFields* internal_default_instance() {
    return reinterpret_cast<const AckFields*>(
               &_AckFields_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(AckFields* other);

  // implements Message ----------------------------------------------

  inline AckFields* New() const PROTOBUF_FINAL { return New(NULL); }

  AckFields* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AckFields& from);
  void MergeFrom(const AckFields& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AckFields* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string originalId = 1;
  void clear_originalid();
  static const int kOriginalIdFieldNumber = 1;
  const ::std::string& originalid() const;
  void set_originalid(const ::std::string& value);
  #if LANG_CXX11
  void set_originalid(::std::string&& value);
  #endif
  void set_originalid(const char* value);
  void set_originalid(const char* value, size_t size);
  ::std::string* mutable_originalid();
  ::std::string* release_originalid();
  void set_allocated_originalid(::std::string* originalid);

  // @@protoc_insertion_point(class_scope:gen.membership_protocol.AckFields)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr originalid_;
  mutable int _cached_size_;
  friend struct protobuf_MembershipProtocolMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:gen.membership_protocol.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  enum CustomFieldsCase {
    kPingReqFields = 5,
    kAckFields = 6,
    kPingFields = 7,
    CUSTOMFIELDS_NOT_SET = 0,
  };

  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Message* other);

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL { return New(NULL); }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .gen.membership_protocol.Gossip gossips = 8;
  int gossips_size() const;
  void clear_gossips();
  static const int kGossipsFieldNumber = 8;
  const ::gen::membership_protocol::Gossip& gossips(int index) const;
  ::gen::membership_protocol::Gossip* mutable_gossips(int index);
  ::gen::membership_protocol::Gossip* add_gossips();
  ::google::protobuf::RepeatedPtrField< ::gen::membership_protocol::Gossip >*
      mutable_gossips();
  const ::google::protobuf::RepeatedPtrField< ::gen::membership_protocol::Gossip >&
      gossips() const;

  // string id = 4;
  void clear_id();
  static const int kIdFieldNumber = 4;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .gen.Address sourceAddress = 2;
  bool has_sourceaddress() const;
  void clear_sourceaddress();
  static const int kSourceAddressFieldNumber = 2;
  const ::gen::Address& sourceaddress() const;
  ::gen::Address* mutable_sourceaddress();
  ::gen::Address* release_sourceaddress();
  void set_allocated_sourceaddress(::gen::Address* sourceaddress);

  // .gen.Address destinationAddress = 3;
  bool has_destinationaddress() const;
  void clear_destinationaddress();
  static const int kDestinationAddressFieldNumber = 3;
  const ::gen::Address& destinationaddress() const;
  ::gen::Address* mutable_destinationaddress();
  ::gen::Address* release_destinationaddress();
  void set_allocated_destinationaddress(::gen::Address* destinationaddress);

  // .gen.membership_protocol.MessageType messageType = 1;
  void clear_messagetype();
  static const int kMessageTypeFieldNumber = 1;
  ::gen::membership_protocol::MessageType messagetype() const;
  void set_messagetype(::gen::membership_protocol::MessageType value);

  // .gen.membership_protocol.PingReqFields pingReqFields = 5;
  bool has_pingreqfields() const;
  void clear_pingreqfields();
  static const int kPingReqFieldsFieldNumber = 5;
  const ::gen::membership_protocol::PingReqFields& pingreqfields() const;
  ::gen::membership_protocol::PingReqFields* mutable_pingreqfields();
  ::gen::membership_protocol::PingReqFields* release_pingreqfields();
  void set_allocated_pingreqfields(::gen::membership_protocol::PingReqFields* pingreqfields);

  // .gen.membership_protocol.AckFields ackFields = 6;
  bool has_ackfields() const;
  void clear_ackfields();
  static const int kAckFieldsFieldNumber = 6;
  const ::gen::membership_protocol::AckFields& ackfields() const;
  ::gen::membership_protocol::AckFields* mutable_ackfields();
  ::gen::membership_protocol::AckFields* release_ackfields();
  void set_allocated_ackfields(::gen::membership_protocol::AckFields* ackfields);

  // .gen.membership_protocol.PingFields pingFields = 7;
  bool has_pingfields() const;
  void clear_pingfields();
  static const int kPingFieldsFieldNumber = 7;
  const ::gen::membership_protocol::PingFields& pingfields() const;
  ::gen::membership_protocol::PingFields* mutable_pingfields();
  ::gen::membership_protocol::PingFields* release_pingfields();
  void set_allocated_pingfields(::gen::membership_protocol::PingFields* pingfields);

  CustomFieldsCase customFields_case() const;
  // @@protoc_insertion_point(class_scope:gen.membership_protocol.Message)
 private:
  void set_has_pingreqfields();
  void set_has_ackfields();
  void set_has_pingfields();

  inline bool has_customFields() const;
  void clear_customFields();
  inline void clear_has_customFields();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::gen::membership_protocol::Gossip > gossips_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::gen::Address* sourceaddress_;
  ::gen::Address* destinationaddress_;
  int messagetype_;
  union CustomFieldsUnion {
    CustomFieldsUnion() {}
    ::gen::membership_protocol::PingReqFields* pingreqfields_;
    ::gen::membership_protocol::AckFields* ackfields_;
    ::gen::membership_protocol::PingFields* pingfields_;
  } customFields_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_MembershipProtocolMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Gossip

// .gen.membership_protocol.GossipEventTypes event = 1;
inline void Gossip::clear_event() {
  event_ = 0;
}
inline ::gen::membership_protocol::GossipEventTypes Gossip::event() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Gossip.event)
  return static_cast< ::gen::membership_protocol::GossipEventTypes >(event_);
}
inline void Gossip::set_event(::gen::membership_protocol::GossipEventTypes value) {
  
  event_ = value;
  // @@protoc_insertion_point(field_set:gen.membership_protocol.Gossip.event)
}

// .gen.Address address = 2;
inline bool Gossip::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline void Gossip::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) delete address_;
  address_ = NULL;
}
inline const ::gen::Address& Gossip::address() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Gossip.address)
  return address_ != NULL ? *address_
                         : *::gen::Address::internal_default_instance();
}
inline ::gen::Address* Gossip::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.Gossip.address)
  return address_;
}
inline ::gen::Address* Gossip::release_address() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.Gossip.address)
  
  ::gen::Address* temp = address_;
  address_ = NULL;
  return temp;
}
inline void Gossip::set_allocated_address(::gen::Address* address) {
  delete address_;
  address_ = address;
  if (address) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.Gossip.address)
}

// string id = 3;
inline void Gossip::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Gossip::id() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Gossip.id)
  return id_.GetNoArena();
}
inline void Gossip::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gen.membership_protocol.Gossip.id)
}
#if LANG_CXX11
inline void Gossip::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gen.membership_protocol.Gossip.id)
}
#endif
inline void Gossip::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gen.membership_protocol.Gossip.id)
}
inline void Gossip::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gen.membership_protocol.Gossip.id)
}
inline ::std::string* Gossip::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.Gossip.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Gossip::release_id() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.Gossip.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Gossip::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.Gossip.id)
}

// -------------------------------------------------------------------

// PingFields

// .gen.Address targetAddress = 1;
inline bool PingFields::has_targetaddress() const {
  return this != internal_default_instance() && targetaddress_ != NULL;
}
inline void PingFields::clear_targetaddress() {
  if (GetArenaNoVirtual() == NULL && targetaddress_ != NULL) delete targetaddress_;
  targetaddress_ = NULL;
}
inline const ::gen::Address& PingFields::targetaddress() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.PingFields.targetAddress)
  return targetaddress_ != NULL ? *targetaddress_
                         : *::gen::Address::internal_default_instance();
}
inline ::gen::Address* PingFields::mutable_targetaddress() {
  
  if (targetaddress_ == NULL) {
    targetaddress_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.PingFields.targetAddress)
  return targetaddress_;
}
inline ::gen::Address* PingFields::release_targetaddress() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.PingFields.targetAddress)
  
  ::gen::Address* temp = targetaddress_;
  targetaddress_ = NULL;
  return temp;
}
inline void PingFields::set_allocated_targetaddress(::gen::Address* targetaddress) {
  delete targetaddress_;
  targetaddress_ = targetaddress;
  if (targetaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.PingFields.targetAddress)
}

// -------------------------------------------------------------------

// PingReqFields

// .gen.Address targetAddress = 1;
inline bool PingReqFields::has_targetaddress() const {
  return this != internal_default_instance() && targetaddress_ != NULL;
}
inline void PingReqFields::clear_targetaddress() {
  if (GetArenaNoVirtual() == NULL && targetaddress_ != NULL) delete targetaddress_;
  targetaddress_ = NULL;
}
inline const ::gen::Address& PingReqFields::targetaddress() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.PingReqFields.targetAddress)
  return targetaddress_ != NULL ? *targetaddress_
                         : *::gen::Address::internal_default_instance();
}
inline ::gen::Address* PingReqFields::mutable_targetaddress() {
  
  if (targetaddress_ == NULL) {
    targetaddress_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.PingReqFields.targetAddress)
  return targetaddress_;
}
inline ::gen::Address* PingReqFields::release_targetaddress() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.PingReqFields.targetAddress)
  
  ::gen::Address* temp = targetaddress_;
  targetaddress_ = NULL;
  return temp;
}
inline void PingReqFields::set_allocated_targetaddress(::gen::Address* targetaddress) {
  delete targetaddress_;
  targetaddress_ = targetaddress;
  if (targetaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.PingReqFields.targetAddress)
}

// -------------------------------------------------------------------

// AckFields

// string originalId = 1;
inline void AckFields::clear_originalid() {
  originalid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AckFields::originalid() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.AckFields.originalId)
  return originalid_.GetNoArena();
}
inline void AckFields::set_originalid(const ::std::string& value) {
  
  originalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gen.membership_protocol.AckFields.originalId)
}
#if LANG_CXX11
inline void AckFields::set_originalid(::std::string&& value) {
  
  originalid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gen.membership_protocol.AckFields.originalId)
}
#endif
inline void AckFields::set_originalid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  originalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gen.membership_protocol.AckFields.originalId)
}
inline void AckFields::set_originalid(const char* value, size_t size) {
  
  originalid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gen.membership_protocol.AckFields.originalId)
}
inline ::std::string* AckFields::mutable_originalid() {
  
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.AckFields.originalId)
  return originalid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AckFields::release_originalid() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.AckFields.originalId)
  
  return originalid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AckFields::set_allocated_originalid(::std::string* originalid) {
  if (originalid != NULL) {
    
  } else {
    
  }
  originalid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), originalid);
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.AckFields.originalId)
}

// -------------------------------------------------------------------

// Message

// .gen.membership_protocol.MessageType messageType = 1;
inline void Message::clear_messagetype() {
  messagetype_ = 0;
}
inline ::gen::membership_protocol::MessageType Message::messagetype() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Message.messageType)
  return static_cast< ::gen::membership_protocol::MessageType >(messagetype_);
}
inline void Message::set_messagetype(::gen::membership_protocol::MessageType value) {
  
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:gen.membership_protocol.Message.messageType)
}

// .gen.Address sourceAddress = 2;
inline bool Message::has_sourceaddress() const {
  return this != internal_default_instance() && sourceaddress_ != NULL;
}
inline void Message::clear_sourceaddress() {
  if (GetArenaNoVirtual() == NULL && sourceaddress_ != NULL) delete sourceaddress_;
  sourceaddress_ = NULL;
}
inline const ::gen::Address& Message::sourceaddress() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Message.sourceAddress)
  return sourceaddress_ != NULL ? *sourceaddress_
                         : *::gen::Address::internal_default_instance();
}
inline ::gen::Address* Message::mutable_sourceaddress() {
  
  if (sourceaddress_ == NULL) {
    sourceaddress_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.Message.sourceAddress)
  return sourceaddress_;
}
inline ::gen::Address* Message::release_sourceaddress() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.Message.sourceAddress)
  
  ::gen::Address* temp = sourceaddress_;
  sourceaddress_ = NULL;
  return temp;
}
inline void Message::set_allocated_sourceaddress(::gen::Address* sourceaddress) {
  delete sourceaddress_;
  sourceaddress_ = sourceaddress;
  if (sourceaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.Message.sourceAddress)
}

// .gen.Address destinationAddress = 3;
inline bool Message::has_destinationaddress() const {
  return this != internal_default_instance() && destinationaddress_ != NULL;
}
inline void Message::clear_destinationaddress() {
  if (GetArenaNoVirtual() == NULL && destinationaddress_ != NULL) delete destinationaddress_;
  destinationaddress_ = NULL;
}
inline const ::gen::Address& Message::destinationaddress() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Message.destinationAddress)
  return destinationaddress_ != NULL ? *destinationaddress_
                         : *::gen::Address::internal_default_instance();
}
inline ::gen::Address* Message::mutable_destinationaddress() {
  
  if (destinationaddress_ == NULL) {
    destinationaddress_ = new ::gen::Address;
  }
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.Message.destinationAddress)
  return destinationaddress_;
}
inline ::gen::Address* Message::release_destinationaddress() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.Message.destinationAddress)
  
  ::gen::Address* temp = destinationaddress_;
  destinationaddress_ = NULL;
  return temp;
}
inline void Message::set_allocated_destinationaddress(::gen::Address* destinationaddress) {
  delete destinationaddress_;
  destinationaddress_ = destinationaddress;
  if (destinationaddress) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.Message.destinationAddress)
}

// string id = 4;
inline void Message::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message::id() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Message.id)
  return id_.GetNoArena();
}
inline void Message::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:gen.membership_protocol.Message.id)
}
#if LANG_CXX11
inline void Message::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:gen.membership_protocol.Message.id)
}
#endif
inline void Message::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:gen.membership_protocol.Message.id)
}
inline void Message::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:gen.membership_protocol.Message.id)
}
inline ::std::string* Message::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.Message.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message::release_id() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.Message.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.Message.id)
}

// .gen.membership_protocol.PingReqFields pingReqFields = 5;
inline bool Message::has_pingreqfields() const {
  return customFields_case() == kPingReqFields;
}
inline void Message::set_has_pingreqfields() {
  _oneof_case_[0] = kPingReqFields;
}
inline void Message::clear_pingreqfields() {
  if (has_pingreqfields()) {
    delete customFields_.pingreqfields_;
    clear_has_customFields();
  }
}
inline  const ::gen::membership_protocol::PingReqFields& Message::pingreqfields() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Message.pingReqFields)
  return has_pingreqfields()
      ? *customFields_.pingreqfields_
      : ::gen::membership_protocol::PingReqFields::default_instance();
}
inline ::gen::membership_protocol::PingReqFields* Message::mutable_pingreqfields() {
  if (!has_pingreqfields()) {
    clear_customFields();
    set_has_pingreqfields();
    customFields_.pingreqfields_ = new ::gen::membership_protocol::PingReqFields;
  }
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.Message.pingReqFields)
  return customFields_.pingreqfields_;
}
inline ::gen::membership_protocol::PingReqFields* Message::release_pingreqfields() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.Message.pingReqFields)
  if (has_pingreqfields()) {
    clear_has_customFields();
    ::gen::membership_protocol::PingReqFields* temp = customFields_.pingreqfields_;
    customFields_.pingreqfields_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_pingreqfields(::gen::membership_protocol::PingReqFields* pingreqfields) {
  clear_customFields();
  if (pingreqfields) {
    set_has_pingreqfields();
    customFields_.pingreqfields_ = pingreqfields;
  }
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.Message.pingReqFields)
}

// .gen.membership_protocol.AckFields ackFields = 6;
inline bool Message::has_ackfields() const {
  return customFields_case() == kAckFields;
}
inline void Message::set_has_ackfields() {
  _oneof_case_[0] = kAckFields;
}
inline void Message::clear_ackfields() {
  if (has_ackfields()) {
    delete customFields_.ackfields_;
    clear_has_customFields();
  }
}
inline  const ::gen::membership_protocol::AckFields& Message::ackfields() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Message.ackFields)
  return has_ackfields()
      ? *customFields_.ackfields_
      : ::gen::membership_protocol::AckFields::default_instance();
}
inline ::gen::membership_protocol::AckFields* Message::mutable_ackfields() {
  if (!has_ackfields()) {
    clear_customFields();
    set_has_ackfields();
    customFields_.ackfields_ = new ::gen::membership_protocol::AckFields;
  }
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.Message.ackFields)
  return customFields_.ackfields_;
}
inline ::gen::membership_protocol::AckFields* Message::release_ackfields() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.Message.ackFields)
  if (has_ackfields()) {
    clear_has_customFields();
    ::gen::membership_protocol::AckFields* temp = customFields_.ackfields_;
    customFields_.ackfields_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_ackfields(::gen::membership_protocol::AckFields* ackfields) {
  clear_customFields();
  if (ackfields) {
    set_has_ackfields();
    customFields_.ackfields_ = ackfields;
  }
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.Message.ackFields)
}

// .gen.membership_protocol.PingFields pingFields = 7;
inline bool Message::has_pingfields() const {
  return customFields_case() == kPingFields;
}
inline void Message::set_has_pingfields() {
  _oneof_case_[0] = kPingFields;
}
inline void Message::clear_pingfields() {
  if (has_pingfields()) {
    delete customFields_.pingfields_;
    clear_has_customFields();
  }
}
inline  const ::gen::membership_protocol::PingFields& Message::pingfields() const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Message.pingFields)
  return has_pingfields()
      ? *customFields_.pingfields_
      : ::gen::membership_protocol::PingFields::default_instance();
}
inline ::gen::membership_protocol::PingFields* Message::mutable_pingfields() {
  if (!has_pingfields()) {
    clear_customFields();
    set_has_pingfields();
    customFields_.pingfields_ = new ::gen::membership_protocol::PingFields;
  }
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.Message.pingFields)
  return customFields_.pingfields_;
}
inline ::gen::membership_protocol::PingFields* Message::release_pingfields() {
  // @@protoc_insertion_point(field_release:gen.membership_protocol.Message.pingFields)
  if (has_pingfields()) {
    clear_has_customFields();
    ::gen::membership_protocol::PingFields* temp = customFields_.pingfields_;
    customFields_.pingfields_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void Message::set_allocated_pingfields(::gen::membership_protocol::PingFields* pingfields) {
  clear_customFields();
  if (pingfields) {
    set_has_pingfields();
    customFields_.pingfields_ = pingfields;
  }
  // @@protoc_insertion_point(field_set_allocated:gen.membership_protocol.Message.pingFields)
}

// repeated .gen.membership_protocol.Gossip gossips = 8;
inline int Message::gossips_size() const {
  return gossips_.size();
}
inline void Message::clear_gossips() {
  gossips_.Clear();
}
inline const ::gen::membership_protocol::Gossip& Message::gossips(int index) const {
  // @@protoc_insertion_point(field_get:gen.membership_protocol.Message.gossips)
  return gossips_.Get(index);
}
inline ::gen::membership_protocol::Gossip* Message::mutable_gossips(int index) {
  // @@protoc_insertion_point(field_mutable:gen.membership_protocol.Message.gossips)
  return gossips_.Mutable(index);
}
inline ::gen::membership_protocol::Gossip* Message::add_gossips() {
  // @@protoc_insertion_point(field_add:gen.membership_protocol.Message.gossips)
  return gossips_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::gen::membership_protocol::Gossip >*
Message::mutable_gossips() {
  // @@protoc_insertion_point(field_mutable_list:gen.membership_protocol.Message.gossips)
  return &gossips_;
}
inline const ::google::protobuf::RepeatedPtrField< ::gen::membership_protocol::Gossip >&
Message::gossips() const {
  // @@protoc_insertion_point(field_list:gen.membership_protocol.Message.gossips)
  return gossips_;
}

inline bool Message::has_customFields() const {
  return customFields_case() != CUSTOMFIELDS_NOT_SET;
}
inline void Message::clear_has_customFields() {
  _oneof_case_[0] = CUSTOMFIELDS_NOT_SET;
}
inline Message::CustomFieldsCase Message::customFields_case() const {
  return Message::CustomFieldsCase(_oneof_case_[0]);
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace membership_protocol
}  // namespace gen

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::gen::membership_protocol::MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gen::membership_protocol::MessageType>() {
  return ::gen::membership_protocol::MessageType_descriptor();
}
template <> struct is_proto_enum< ::gen::membership_protocol::GossipEventTypes> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gen::membership_protocol::GossipEventTypes>() {
  return ::gen::membership_protocol::GossipEventTypes_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MembershipProtocolMessage_2eproto__INCLUDED
